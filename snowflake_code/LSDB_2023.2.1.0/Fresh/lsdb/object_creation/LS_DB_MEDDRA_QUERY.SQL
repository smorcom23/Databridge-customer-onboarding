--call ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.PRC_LS_DB_MEDDRA_QUERY();
CREATE OR REPLACE PROCEDURE ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.PRC_LS_DB_MEDDRA_QUERY()
RETURNS VARCHAR NOT NULL

LANGUAGE SQL
AS
$$

DECLARE

CURRENT_TS_VAR TIMESTAMP;

BEGIN 

truncate table ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_MEDDRA_QUERY;

INSERT INTO ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_MEDDRA_QUERY

(   etl_date_created,
    SMQ_CODE,
	SMQ_LEVEL,
	MEDDRA_VERSION,
	TERM_CODE,
	TERM_LEVEL,
	TERM_MED_VERSION,
	TERM_SCOPE,
	TERM_STATUS,
	TERM_ADDITION_VERSION,
	TERM_LAST_MODIFIED_VERSION,
	SOC_CODE,
	TERM_CATEGORY,
	TERM_WEIGHT,
	LANGUAGE_CODE,
	SPR_ID,
	PROCESS_DATE,
    EXPIRY_DATE , 
    LOAD_TS ,
    INTEGRATION_ID,
	LANGUAGE_WID
	)




SELECT
    etl_date_created,
	SMQ_CODE_L1 AS SMQ_CODE,
	SMQ_LEVEL_L1 AS SMQ_LEVEL,
	MEDDRA_VERSION,
	TERM_CODE,
	TERM_LEVEL,
	TERM_MED_VERSION,
	TERM_SCOPE,
	TERM_STATUS,
	TERM_ADDITION_VERSION,
	TERM_LAST_MODIFIED_VERSION,
	SOC_CODE,
	TERM_CATEGORY,
	TERM_WEIGHT,
	LANGUAGE_CODE,
	CASE WHEN COALESCE(SPR_ID,'')='' THEN '-9999' ELSE SPR_ID END AS SPR_ID,
	TO_DATE(etl_date_created) PROCESS_DATE,
    EXPIRY_DATE , 
    LOAD_TS ,
    CONCAT(NVL(SMQ_CODE_L1,-1),'||',NVL(SMQ_LEVEL_L1,-1)) INTEGRATION_ID ,
	LANGUAGE_WID

FROM 
	${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_CMQ_SMQ_HIER_TERM_SCOPE
WHERE 
	SMQ_LEVEL_L1 = 1
	AND ETL_LOAD_STATUS = 1
    AND EXPIRY_DATE='9999-12-31'
UNION
SELECT etl_date_created,
	SMQ_CODE_L2 AS SMQ_CODE,
	SMQ_LEVEL_L2 AS SMQ_LEVEL,
	MEDDRA_VERSION,
	TERM_CODE,
	TERM_LEVEL,
	TERM_MED_VERSION,
	TERM_SCOPE,
	TERM_STATUS,
	TERM_ADDITION_VERSION,
	TERM_LAST_MODIFIED_VERSION,
	SOC_CODE,
	TERM_CATEGORY,
	TERM_WEIGHT,
	LANGUAGE_CODE,
	CASE WHEN COALESCE(SPR_ID,'')='' THEN '-9999' ELSE SPR_ID END AS SPR_ID,
	TO_DATE(etl_date_created) PROCESS_DATE,
    EXPIRY_DATE , 
    LOAD_TS ,
    CONCAT(NVL(SMQ_CODE_L2,-1),'||',NVL(SMQ_LEVEL_L2,-1)) INTEGRATION_ID,
	LANGUAGE_WID

FROM 
	${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_CMQ_SMQ_HIER_TERM_SCOPE
WHERE 
	SMQ_LEVEL_L2 = 2
	AND ETL_LOAD_STATUS = 1
    AND EXPIRY_DATE='9999-12-31'
UNION
SELECT etl_date_created,
	SMQ_CODE_L3 AS SMQ_CODE,
	SMQ_LEVEL_L3 AS SMQ_LEVEL,
	MEDDRA_VERSION,
	TERM_CODE,
	TERM_LEVEL,
	TERM_MED_VERSION,
	TERM_SCOPE,
	TERM_STATUS,
	TERM_ADDITION_VERSION,
	TERM_LAST_MODIFIED_VERSION,
	SOC_CODE,
	TERM_CATEGORY,
	TERM_WEIGHT,
	LANGUAGE_CODE,
	CASE WHEN COALESCE(SPR_ID,'')='' THEN '-9999' ELSE SPR_ID END AS SPR_ID,
	TO_DATE(etl_date_created) PROCESS_DATE,
    EXPIRY_DATE , 
    LOAD_TS ,
    CONCAT(NVL(SMQ_CODE_L3,-1),'||',NVL(SMQ_LEVEL_L3,-1)) INTEGRATION_ID	,
	LANGUAGE_WID

FROM 
	${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_CMQ_SMQ_HIER_TERM_SCOPE
WHERE 
	SMQ_LEVEL_L3 = 3
	AND ETL_LOAD_STATUS = 1
   AND EXPIRY_DATE='9999-12-31'
UNION
SELECT etl_date_created,
	SMQ_CODE_L4 AS SMQ_CODE,
	SMQ_LEVEL_L4 AS SMQ_LEVEL,
	MEDDRA_VERSION,
	TERM_CODE,
	TERM_LEVEL,
	TERM_MED_VERSION,
	TERM_SCOPE,
	TERM_STATUS,
	TERM_ADDITION_VERSION,
	TERM_LAST_MODIFIED_VERSION,
	SOC_CODE,
	TERM_CATEGORY,
	TERM_WEIGHT,
	LANGUAGE_CODE,
	CASE WHEN COALESCE(SPR_ID,'')='' THEN '-9999' ELSE SPR_ID END AS SPR_ID,
	TO_DATE(etl_date_created) PROCESS_DATE,
    EXPIRY_DATE , 
    LOAD_TS ,
    CONCAT(NVL(SMQ_CODE_L4,-1),'||',NVL(SMQ_LEVEL_L4,-1)) INTEGRATION_ID,
	LANGUAGE_WID

FROM 
	${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_CMQ_SMQ_HIER_TERM_SCOPE
WHERE 
	SMQ_LEVEL_L4 = 4
	AND ETL_LOAD_STATUS = 1
   AND EXPIRY_DATE='9999-12-31'
UNION
SELECT etl_date_created,
	SMQ_CODE_L5 AS SMQ_CODE,
	SMQ_LEVEL_L5 AS SMQ_LEVEL,
	MEDDRA_VERSION,
	TERM_CODE,
	TERM_LEVEL,
	TERM_MED_VERSION,
	TERM_SCOPE,
	TERM_STATUS,
	TERM_ADDITION_VERSION,
	TERM_LAST_MODIFIED_VERSION,
	SOC_CODE,
	TERM_CATEGORY,
	TERM_WEIGHT,
	LANGUAGE_CODE,
	CASE WHEN COALESCE(SPR_ID,'')='' THEN '-9999' ELSE SPR_ID END AS SPR_ID,
	TO_DATE(etl_date_created) PROCESS_DATE,
    EXPIRY_DATE , 
    LOAD_TS ,
    CONCAT(NVL(SMQ_CODE_L5,-1),'||',NVL(SMQ_LEVEL_L5,-1)) INTEGRATION_ID,
	LANGUAGE_WID

FROM 
	${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_CMQ_SMQ_HIER_TERM_SCOPE
WHERE 
	SMQ_LEVEL_L5 = 5
	AND ETL_LOAD_STATUS = 1
   AND EXPIRY_DATE='9999-12-31'
UNION
SELECT etl_date_created,
	SMQ_CODE_L6 AS SMQ_CODE,
	SMQ_LEVEL_L6 AS SMQ_LEVEL,
	MEDDRA_VERSION,
	TERM_CODE,
	TERM_LEVEL,
	TERM_MED_VERSION,
	TERM_SCOPE,
	TERM_STATUS,
	TERM_ADDITION_VERSION,
	TERM_LAST_MODIFIED_VERSION,
	SOC_CODE,
	TERM_CATEGORY,
	TERM_WEIGHT,
	LANGUAGE_CODE,
	CASE WHEN COALESCE(SPR_ID,'')='' THEN '-9999' ELSE SPR_ID END AS SPR_ID,
	TO_DATE(etl_date_created) PROCESS_DATE,
    EXPIRY_DATE , 
    LOAD_TS ,
    CONCAT(NVL(SMQ_CODE_L6,-1),'||',NVL(SMQ_LEVEL_L6,-1)) INTEGRATION_ID,
	LANGUAGE_WID
	
FROM 
	${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_CMQ_SMQ_HIER_TERM_SCOPE
WHERE 
	SMQ_LEVEL_L6 = 6
	AND ETL_LOAD_STATUS = 1
   AND EXPIRY_DATE='9999-12-31'
UNION
SELECT etl_date_created,
	SMQ_CODE_L7 AS SMQ_CODE,
	SMQ_LEVEL_L7 AS SMQ_LEVEL,
	MEDDRA_VERSION,
	TERM_CODE,
	TERM_LEVEL,
	TERM_MED_VERSION,
	TERM_SCOPE,
	TERM_STATUS,
	TERM_ADDITION_VERSION,
	TERM_LAST_MODIFIED_VERSION,
	SOC_CODE,
	TERM_CATEGORY,
	TERM_WEIGHT,
	LANGUAGE_CODE,
	CASE WHEN COALESCE(SPR_ID,'')='' THEN '-9999' ELSE SPR_ID END AS SPR_ID,
	TO_DATE(etl_date_created) PROCESS_DATE,
    EXPIRY_DATE , 
    LOAD_TS ,
    CONCAT(NVL(SMQ_CODE_L7,-1),'||',NVL(SMQ_LEVEL_L7,-1)) INTEGRATION_ID,
	LANGUAGE_WID

FROM 
	${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_CMQ_SMQ_HIER_TERM_SCOPE
WHERE 
	SMQ_LEVEL_L7 = 7
	AND ETL_LOAD_STATUS = 1
   AND EXPIRY_DATE='9999-12-31'
;

  RETURN 'LS_DB_MEDDRA_QUERY Load completed';

EXCEPTION
  WHEN OTHER THEN
    LET LINE := SQLCODE || ': ' || SQLERRM;
UPDATE ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_DATA_PROCESSING_DTL_TBL set ERROR_DETAILS=:line, LOAD_STATUS = 'Error' WHERE target_table_name='LS_DB_MEDDRA_QUERY'
and LOAD_STATUS = 'In Progress'
;

  RETURN 'LS_DB_MEDDRA_QUERY not loaded due to etl error. please check LS_DB_DATA_PROCESSING_DTL_TBL for more details';
END;
$$
;
