CREATE OR REPLACE PROCEDURE DATABRIDGE_DEV_DB.LSDB_TRANSFM.PRC_RECCNT_CHECK_STG_TRANSFM(begin_date date, end_date date)
RETURNS VARCHAR NOT NULL
LANGUAGE SQL 
AS 
--EXECUTE IMMEDIATE 
$$

DECLARE

v_begin_date DATE ;
v_end_date DATE ;
C1 CURSOR FOR (SELECT TABLE_NAME_STG, 
                        PRIMARY_KEY_NAME_STG, 
                        MODIFIED_DATE_COLUMN_NAME_STG, 
                        RECCNT_KEY_NAME_STG, 
                        TABLE_NAME_TRANSFM, 
                        CORR_PRIMARY_KEY_OF_STG_IN_TRANSFM, 
                        CORR_MODIFIED_DATE_COLUMN_NAME_TRANSFM,
                        RECCNT_KEY_NAME_TRANSFM 
                        FROM DATABRIDGE_DEV_DB.LSDB_TRANSFM.DC_STG_TRANSFM_MAPPING
                        where RECCNT_KEY_NAME_TRANSFM is not null
                        group by 1,2,3,4,5,6,7,8 );

C2 CURSOR FOR (SELECT TABLE_NAME_TRANSFM, 
                        RECCNT_MODIFIED_DATE_COLUMN_NAME_TRANSFM,
                        RECCNT_KEY_NAME_TRANSFM 
                        FROM DATABRIDGE_DEV_DB.LSDB_TRANSFM.DC_STG_TRANSFM_MAPPING
                        where RECCNT_KEY_NAME_TRANSFM is not null
                        group by 1,2,3 );

sql_combine_stg_table_cnts VARCHAR ;
sql_statement_stg_rec_cnts varchar ;
transfm_sql_statement VARCHAR ;
stg_table_counter bigint;
number_of_recs_in_table bigint ;



BEGIN 

v_begin_date := COALESCE(begin_date,DATEADD('DAY',-1,DATE(CURRENT_TIMESTAMP())));
v_end_date := COALESCE(end_date,DATEADD('DAY',-1,DATE(CURRENT_TIMESTAMP())));


CREATE OR REPLACE TABLE DATABRIDGE_DEV_DB.LSDB_TRANSFM.STG_TABLE_COUNTS
(TABLE_NAME_STG VARCHAR(100),
JOIN_KEY_STG VARCHAR(250),
PROCESSING_DT TIMESTAMP_NTZ,
TABLE_NAME_TRANSFM VARCHAR(100),
RECORD_COUNTS NUMBER(38,0)) ;

CREATE OR REPLACE TABLE DATABRIDGE_DEV_DB.LSDB_TRANSFM.VALID_STG_RECORDS
(TABLE_NAME_STG VARCHAR(100),
COUNTING_KEY_STG VARCHAR(250),
PROCESSING_DT DATE,
CDC_OPERATION_TYPE CHAR(1),
TABLE_NAME_TRANSFM VARCHAR(100)) ;

CREATE OR REPLACE TABLE DATABRIDGE_DEV_DB.LSDB_TRANSFM.RECCNT_DIFF_STG_AND_TRSNAFM
(SCHEMA_LOCATION VARCHAR(100),
TABLE_NAME VARCHAR(100),
PROCESSING_DT DATE,
RECORD_COUNT_KEY VARCHAR ,
RECORD_COUNT BIGINT) ;
 ;


FOR V_TABLE_DETAILS IN C1 DO

let sql_statement_valid_stg_rec varchar ;
let sql_statement_valid_transfm_rec varchar ;

sql_statement_valid_stg_rec := 'insert into DATABRIDGE_DEV_DB.LSDB_TRANSFM.VALID_STG_RECORDS
                                (TABLE_NAME_STG,COUNTING_KEY_STG,PROCESSING_DT,CDC_OPERATION_TYPE,TABLE_NAME_TRANSFM)
                                select \'' || V_TABLE_DETAILS.TABLE_NAME_STG 
                                || '\', CONCAT(' || V_TABLE_DETAILS.RECCNT_KEY_NAME_STG 
                                || '),DATE(' || V_TABLE_DETAILS.MODIFIED_DATE_COLUMN_NAME_STG 
                                || '), CDC_OPERATION_TYPE, \''
                                || V_TABLE_DETAILS.TABLE_NAME_TRANSFM 
                                || '\' from DATABRIDGE_DEV_DB.LSDB_RPL.' || V_TABLE_DETAILS.TABLE_NAME_STG 
                                || ' where date(' || V_TABLE_DETAILS.MODIFIED_DATE_COLUMN_NAME_STG 
                                || ') between \'' || v_begin_date || '\' and \'' || v_end_date || '\' 
                                QUALIFY ROW_NUMBER() OVER(PARTITION BY ' || V_TABLE_DETAILS.PRIMARY_KEY_NAME_STG || ' ORDER BY CDC_OPERATION_TIME DESC) = 1;' ; 

execute immediate :sql_statement_valid_stg_rec ;

--return(:sql_statement_valid_stg_rec) ;

END FOR ;
CLOSE C1 ;

delete from DATABRIDGE_DEV_DB.LSDB_TRANSFM.VALID_STG_RECORDS
where cdc_operation_type = 'D' ;
                    
INSERT INTO DATABRIDGE_DEV_DB.LSDB_TRANSFM.STG_TABLE_COUNTS
(TABLE_NAME_STG,JOIN_KEY_STG,PROCESSING_DT,TABLE_NAME_TRANSFM,RECORD_COUNTS)
select TABLE_NAME_STG,COUNTING_KEY_STG,PROCESSING_DT, TABLE_NAME_TRANSFM, count(*) 
from DATABRIDGE_DEV_DB.LSDB_TRANSFM.VALID_STG_RECORDS 
GROUP BY 1,2,3,4  ;
                                        

create or replace table DATABRIDGE_DEV_DB.LSDB_TRANSFM.COMBINED_COUNTS
(SCHEMA_LOCATION VARCHAR(100),
TABLE_NAME_TRANSFM VARCHAR(100),
JOIN_KEY_VALUE VARCHAR(250),
PROCESSING_DT TIMESTAMP_NTZ,
RECORD_COUNTS NUMBER(38,0)) ;

Insert into DATABRIDGE_DEV_DB.LSDB_TRANSFM.COMBINED_COUNTS
(SCHEMA_LOCATION,TABLE_NAME_TRANSFM,JOIN_KEY_VALUE,PROCESSING_DT,RECORD_COUNTS )
select 'STG',TABLE_NAME_TRANSFM , JOIN_KEY_STG, PROCESSING_DT, EXP(SUM(LN(record_counts))) 
from DATABRIDGE_DEV_DB.LSDB_TRANSFM.STG_TABLE_COUNTS
group by 1,2,3,4  ;

FOR V_TABLE_DETAILS IN C2 DO

let sql_statement_transfm_rec_cnt varchar ;

sql_statement_transfm_rec_cnt := 'Insert into DATABRIDGE_DEV_DB.LSDB_TRANSFM.COMBINED_COUNTS
(SCHEMA_LOCATION,TABLE_NAME_TRANSFM,JOIN_KEY_VALUE,PROCESSING_DT,RECORD_COUNTS )
                                        select \'TRANSFM\',\'' || V_TABLE_DETAILS.TABLE_NAME_TRANSFM
                                        || '\',' || V_TABLE_DETAILS.RECCNT_KEY_NAME_TRANSFM
                                        || ', DATE(' || V_TABLE_DETAILS.RECCNT_MODIFIED_DATE_COLUMN_NAME_TRANSFM
                                        || '), count(*) from DATABRIDGE_DEV_DB.LSDB_TRANSFM.' 
                                        || V_TABLE_DETAILS.TABLE_NAME_TRANSFM || ' where date(' 
                                        || V_TABLE_DETAILS.RECCNT_MODIFIED_DATE_COLUMN_NAME_TRANSFM 
                                || ') between \'' || v_begin_date || '\' and \'' || v_end_date || '\' '
                                || ' group by 1,2,3,4 ;' ;

execute immediate :sql_statement_transfm_rec_cnt ;
--return(:sql_statement_transfm_rec_cnt) ;

END FOR ;
CLOSE C2 ;

insert into DATABRIDGE_DEV_DB.LSDB_TRANSFM.RECCNT_DIFF_STG_AND_TRSNAFM (SCHEMA_LOCATION,TABLE_NAME,PROCESSING_DT,RECORD_COUNT_KEY,RECORD_COUNT)
select SCHEMA_LOCATION,TABLE_NAME_TRANSFM,PROCESSING_DT,JOIN_KEY_VALUE,RECORD_COUNTS from DATABRIDGE_DEV_DB.LSDB_TRANSFM.COMBINED_COUNTS
where SCHEMA_LOCATION = 'STG'
AND (TABLE_NAME_TRANSFM,PROCESSING_DT,JOIN_KEY_VALUE,RECORD_COUNTS) IN
(select TABLE_NAME_TRANSFM,PROCESSING_DT,JOIN_KEY_VALUE,RECORD_COUNTS 
from DATABRIDGE_DEV_DB.LSDB_TRANSFM.COMBINED_COUNTS
where SCHEMA_LOCATION = 'STG'

MINUS

select TABLE_NAME_TRANSFM,PROCESSING_DT,JOIN_KEY_VALUE,RECORD_COUNTS 
from DATABRIDGE_DEV_DB.LSDB_TRANSFM.COMBINED_COUNTS
where SCHEMA_LOCATION = 'TRANSFM' )
;

insert into DATABRIDGE_DEV_DB.LSDB_TRANSFM.RECCNT_DIFF_STG_AND_TRSNAFM (SCHEMA_LOCATION,TABLE_NAME,PROCESSING_DT,RECORD_COUNT_KEY,RECORD_COUNT)
select SCHEMA_LOCATION,TABLE_NAME_TRANSFM,PROCESSING_DT,JOIN_KEY_VALUE,RECORD_COUNTS 
from DATABRIDGE_DEV_DB.LSDB_TRANSFM.COMBINED_COUNTS
where SCHEMA_LOCATION = 'TRANSFM'
AND (TABLE_NAME_TRANSFM,PROCESSING_DT,JOIN_KEY_VALUE,RECORD_COUNTS) IN
(select TABLE_NAME_TRANSFM,PROCESSING_DT,JOIN_KEY_VALUE,RECORD_COUNTS 
from DATABRIDGE_DEV_DB.LSDB_TRANSFM.COMBINED_COUNTS
where SCHEMA_LOCATION = 'TRANSFM'

MINUS

select TABLE_NAME_TRANSFM,PROCESSING_DT,JOIN_KEY_VALUE,RECORD_COUNTS 
from DATABRIDGE_DEV_DB.LSDB_TRANSFM.COMBINED_COUNTS
where SCHEMA_LOCATION = 'STG' )
;

Return 'Record count check between STG and TRANSFM tables successfully complte' ;

END;
$$ ;

