CREATE OR REPLACE PROCEDURE DATABRIDGE_DEV_DB.LSDB_TRANSFM.PRC_RECCNT_CHECK_LSMV_STG(begin_date date, end_date date)
RETURNS VARCHAR NOT NULL
LANGUAGE SQL 
AS 
--EXECUTE IMMEDIATE 
$$

DECLARE

V_BEGIN_DATE DATE ;
V_END_DATE DATE ;
C1_NOT_NULL CURSOR FOR (SELECT TABLE_NAME,SCHEMA_NAME,PRIMARY_KEY_COLS,RECORD_MODIFIED_DATE_COL FROM                     DATABRDIGE_DEV_DB.LSDB_TRANSFM.DAILY_DC_CHECK_TABLE_MAPPING where RECORD_MODIFIED_DATE_COL is not null);

C1_NULL CURSOR FOR (SELECT TABLE_NAME,SCHEMA_NAME,PRIMARY_KEY_COLS,RECORD_MODIFIED_DATE_COL FROM                     DATABRDIGE_DEV_DB.LSDB_TRANSFM.DAILY_DC_CHECK_TABLE_MAPPING where RECORD_MODIFIED_DATE_COL is null);

sql_statement VARCHAR ;
V_TABLE_DETAILS resultset ;


BEGIN 

V_BEGIN_DATE := COALESCE(begin_date,DATEADD('DAY',-1,DATE(CURRENT_TIMESTAMP())));
V_END_DATE := COALESCE(end_date,DATEADD('DAY',-1,DATE(CURRENT_TIMESTAMP())));


create or replace table DATABRDIGE_DEV_DB.LSDB_TRANSFM.DAILY_DC_CHECK_TABLE_COUNTS
(TABLE_NAME VARCHAR(100),
SCHEMA_NAME VARCHAR(100),
PRIMARY_KEY_COLS VARCHAR(250),
RECORD_MODIFIED_DATE DATE,
CDC_OPERATION_TYPE CHAR(1),
LOAD_TS TIMESTAMP_NTZ

);


FOR V_TABLE_DETAILS IN C1_NOT_NULL DO

    sql_statement := 'INSERT INTO DATABRDIGE_DEV_DB.LSDB_TRANSFM.DAILY_DC_CHECK_TABLE_COUNTS
                     (TABLE_NAME,SCHEMA_NAME,PRIMARY_KEY_COLS,RECORD_MODIFIED_DATE,CDC_OPERATION_TYPE, LOAD_TS)
                    select \''|| V_TABLE_DETAILS.TABLE_NAME || '\',\'' || V_TABLE_DETAILS.SCHEMA_NAME
                            || '\',' || 'CONCAT(' || V_TABLE_DETAILS.PRIMARY_KEY_COLS || '), ' 
                            || V_TABLE_DETAILS.RECORD_MODIFIED_DATE_COL || ',CDC_OPERATION_TYPE, CURRENT_TIMESTAMP() 
                            from DATABRDIGE_DEV_DB.' || V_TABLE_DETAILS.SCHEMA_NAME || '.' || V_TABLE_DETAILS.TABLE_NAME 
                            || ' where date(' || V_TABLE_DETAILS.RECORD_MODIFIED_DATE_COL || ') between \'' || V_BEGIN_DATE 
                            || '\' and \'' || V_END_DATE || '\' QUALIFY ROW_NUMBER() OVER(PARTITION BY ' 
                            || V_TABLE_DETAILS.PRIMARY_KEY_COLS || ' ORDER BY CDC_OPERATION_TIME DESC) = 1;' ;

--EXECUTE IMMEDIATE :sql_statement ;

return(:sql_statement);

END FOR ;

CLOSE C1_NOT_NULL ;


FOR V_TABLE_DETAILS IN C1_NULL DO

    sql_statement := 'INSERT INTO DATABRDIGE_DEV_DB.LSDB_TRANSFM.DAILY_DC_CHECK_TABLE_COUNTS
                     (TABLE_NAME,SCHEMA_NAME,PRIMARY_KEY_COLS,RECORD_MODIFIED_DATE,CDC_OPERATION_TYPE, LOAD_TS)
                    select \''|| V_TABLE_DETAILS.TABLE_NAME || '\',\'' || V_TABLE_DETAILS.SCHEMA_NAME || '\',' 
                    || 'CONCAT(' || V_TABLE_DETAILS.PRIMARY_KEY_COLS || '), null, ' 
                    || 'CDC_OPERATION_TYPE, CURRENT_TIMESTAMP() from DATABRDIGE_DEV_DB.' || V_TABLE_DETAILS.SCHEMA_NAME 
                    || '.' || V_TABLE_DETAILS.TABLE_NAME || ' ;' ;

EXECUTE IMMEDIATE :sql_statement ;

END FOR ;

CLOSE C1_NULL ;

delete from DATABRDIGE_DEV_DB.LSDB_TRANSFM.DAILY_DC_CHECK_TABLE_COUNTS
where (table_name,primary_key_cols,NVL(record_modified_date,'XXX')) IN
(select table_name,primary_key_cols,NVL(record_modified_date,'XXX')
from DATABRDIGE_DEV_DB.LSDB_TRANSFM.DAILY_DC_CHECK_TABLE_COUNTS
where cdc_operation_type = 'D') ;

return 'Daily record count check betwwen LSMV and STG successfully completed';

END;
$$ ;


/* set BEGIN_DATE = DATEADD('DAY',-1,DATE(CURRENT_TIMESTAMP()));
set END_DATE = DATEADD('DAY',-1,DATE(CURRENT_TIMESTAMP())); */


select
'select  CONCAT(' || PRIMARY_KEY_COLS ||')' case when RECORD_MODIFIED_DATE_COL is not null then ', ' end || RECORD_MODIFIED_DATE_COL || ' from databridge_dev_db.' ||  SCHEMA_NAME || '.' || TABLE_NAME || ' where date(' || RECORD_MODIFIED_DATE_COL || ') between '|| $BEGIN_DATE || ' and ' || $END_DATE || ';'
FROM DATABRDIGE_DEV_DB.LSDB_TRANSFM.DAILY_DC_CHECK_TABLE_MAPPING


--------------------------- MAPPING TABLE  ---------------------------
create or replace table DATABRDIGE_DEV_DB.LSDB_TRANSFM.DAILY_DC_CHECK_TABLE_MAPPING
(TABLE_NAME VARCHAR(100),
SCHEMA_NAME VARCHAR(100),
PRIMARY_KEY_COLS VARCHAR(250),
RECORD_MODIFIED_DATE_COL VARCHAR(100),
LOAD_TS TIMESTAMP_NTZ

);


insert into DATABRDIGE_DEV_DB.LSDB_TRANSFM.DAILY_DC_CHECK_TABLE_MAPPING
values('LSMV_LATENESS_SUB_COMPLIANCE','LSDB_RPL','RECORD_ID',null,current_timestamp) ;


SELECT * FROM DATABRDIGE_DEV_DB.LSDB_TRANSFM.DAILY_DC_CHECK_TABLE_MAPPING

create or replace table DATABRDIGE_DEV_DB.LSDB_TRANSFM.DAILY_DC_CHECK_TABLE_COUNTS
(TABLE_NAME VARCHAR(100),
SCHEMA_NAME VARCHAR(100),
PRIMARY_KEY_COLS VARCHAR(250),
RECORD_MODIFIED_DATE DATE,
CDC_OPERATION_TYPE CHAR(1),
LOAD_TS TIMESTAMP_NTZ

);


                    select date(DATE_MODIFIED), count(*) from DATABRDIGE_DEV_DB.LSDB_RPL.LSMV_ACCOUNTS
                    group by 1
                    order by 2 desc

select table_name,count(*) from DATABRDIGE_DEV_DB.LSDB_TRANSFM.DAILY_DC_CHECK_TABLE_COUNTS
group by 1

select * from DATABRDIGE_DEV_DB.LSDB_TRANSFM.DAILY_DC_CHECK_TABLE_COUNTS
where table_name = 'LSMV_LATENESS_SUB_COMPLIANCE'
group by 1

select count(*) from DATABRDIGE_DEV_DB.LSDB_RPL.LSMV_LATENESS_SUB_COMPLIANCE

delete from DATABRDIGE_DEV_DB.LSDB_TRANSFM.DAILY_DC_CHECK_TABLE_MAPPING
where table_name = 'LS_CASE_SERIES_DETAILS'


truncate table DATABRDIGE_DEV_DB.LSDB_TRANSFM.DAILY_DC_CHECK_TABLE_COUNTS
                   