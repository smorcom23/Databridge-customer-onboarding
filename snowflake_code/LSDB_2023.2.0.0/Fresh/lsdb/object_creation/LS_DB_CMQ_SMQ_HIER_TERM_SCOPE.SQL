



--call ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.PRC_LS_DB_CMQ_SMQ_HIER_TERM_SCOPE();

-- USE SCHEMA ${tenant_transfm_db_name}.${tenant_transfm_schema_name};
CREATE OR REPLACE PROCEDURE ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.PRC_LS_DB_CMQ_SMQ_HIER_TERM_SCOPE()
RETURNS VARCHAR NOT NULL

LANGUAGE SQL
AS
$$

DECLARE

CURRENT_TS_VAR TIMESTAMP;

BEGIN 

CURRENT_TS_VAR := CURRENT_TIMESTAMP();

-- delete from ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_ETL_CONFIG  where TARGET_TABLE_NAME='LS_DB_CMQ_SMQ_HIER_TERM_SCOPE';
-- delete from ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_DATA_PROCESSING_DTL_TBL  where TARGET_TABLE_NAME='LS_DB_CMQ_SMQ_HIER_TERM_SCOPE';



insert into ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_ETL_CONFIG (ROW_WID,TARGET_TABLE_NAME,PARAM_NAME)

select ROW_WID,TARGET_TABLE_NAME,PARAM_NAME from 
(select coalesce((select max( ROW_WID) from ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_ETL_CONFIG)+1,1) ROW_WID,'LS_DB_CMQ_SMQ_HIER_TERM_SCOPE' AS TARGET_TABLE_NAME,'CDC_EXTRACT_TS_LB' PARAM_NAME
 union all select coalesce((select max( ROW_WID) from ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_ETL_CONFIG)+2,1),'LS_DB_CMQ_SMQ_HIER_TERM_SCOPE','CDC_EXTRACT_TS_UB'
) where TARGET_TABLE_NAME not in (select TARGET_TABLE_NAME from ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_ETL_CONFIG)
;


INSERT INTO ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_DATA_PROCESSING_DTL_TBL(ROW_WID,FUNCTIONAL_AREA,ENTITY_NAME,TARGET_TABLE_NAME,LOAD_TS,LOAD_START_TS,LOAD_END_TS,
REC_READ_CNT,REC_PROCESSED_CNT,ERROR_REC_CNT,ERROR_DETAILS,LOAD_STATUS,CHANGED_REC_SET
)
SELECT (select nvl(max(row_wid)+1,1) from ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_DATA_PROCESSING_DTL_TBL where target_table_name='LS_DB_CMQ_SMQ_HIER_TERM_SCOPE'),
	'LSRA','Case','LS_DB_CMQ_SMQ_HIER_TERM_SCOPE',null,CURRENT_TIMESTAMP,null,null,null,null,null,'In Progress',null;


UPDATE ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_ETL_CONFIG
SET PARAM_VALUE= nvl((SELECT LOAD_START_TS from ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_DATA_PROCESSING_DTL_TBL WHERE TARGET_TABLE_NAME='LS_DB_CMQ_SMQ_HIER_TERM_SCOPE' AND LOAD_STATUS = 'Completed' ORDER BY ROW_WID DESC limit 1),to_timestamp('1900-01-01','YYYY-MM-DD'))
WHERE TARGET_TABLE_NAME = 'LS_DB_CMQ_SMQ_HIER_TERM_SCOPE'
AND PARAM_NAME='CDC_EXTRACT_TS_LB'
--AND 'I' = (SELECT PARAM_NAME FROM ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_ETL_CONFIG WHERE TARGET_TABLE_NAME ='LOAD_CONTROL')
;

UPDATE ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_ETL_CONFIG
SET PARAM_VALUE= CURRENT_TIMESTAMP
WHERE TARGET_TABLE_NAME = 'LS_DB_CMQ_SMQ_HIER_TERM_SCOPE'
AND PARAM_NAME='CDC_EXTRACT_TS_UB'
--AND 'I' = (SELECT PARAM_NAME FROM ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_ETL_CONFIG WHERE TARGET_TABLE_NAME ='LOAD_CONTROL')
;








DROP TABLE IF EXISTS ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_DELETION_TMP;
CREATE TEMPORARY TABLE  ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_DELETION_TMP  As 
select RECORD_ID,'LSMV_CC_SMQ_CMQ_TERMS_INFO' AS TABLE_NAME FROM ${stage_db_name}.${stage_schema_name}.LSMV_CC_SMQ_CMQ_TERMS_INFO WHERE CDC_OPERATION_TYPE IN ('D') 
UNION ALL 
select RECORD_ID,'LSMV_CC_SMQ_CMQ_TERMS_INFO_C' AS TABLE_NAME FROM ${stage_db_name}.${stage_schema_name}.LSMV_CC_SMQ_CMQ_TERMS_INFO_C WHERE CDC_OPERATION_TYPE IN ('D')
UNION all
select RECORD_ID,'LSMV_CC_SMQ_CMQ_LIST' AS TABLE_NAME FROM ${stage_db_name}.${stage_schema_name}.LSMV_CC_SMQ_CMQ_LIST WHERE CDC_OPERATION_TYPE IN ('D') 
UNION ALL 
select RECORD_ID,'LSMV_CC_SMQ_CMQ_LIST_C' AS TABLE_NAME FROM ${stage_db_name}.${stage_schema_name}.LSMV_CC_SMQ_CMQ_LIST_C WHERE CDC_OPERATION_TYPE IN ('D')
;

DROP TABLE IF EXISTS ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_L1_TMP;
CREATE TEMPORARY TABLE ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_L1_TMP  AS 
WITH LSMV_CASE_NO_SUBSET as
 (
   select DISTINCT RECORD_ID record_id, 0 common_parent_key,smq_code   FROM ${stage_db_name}.${stage_schema_name}.LSMV_CC_SMQ_CMQ_TERMS_INFO WHERE CDC_OPERATION_TIME >(SELECT PARAM_VALUE FROM ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_ETL_CONFIG WHERE TARGET_TABLE_NAME ='LS_DB_CMQ_SMQ_HIER_TERM_SCOPE' AND PARAM_NAME='CDC_EXTRACT_TS_LB')
	AND CDC_OPERATION_TIME<= (SELECT PARAM_VALUE FROM ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_ETL_CONFIG WHERE TARGET_TABLE_NAME ='LS_DB_CMQ_SMQ_HIER_TERM_SCOPE' AND PARAM_NAME='CDC_EXTRACT_TS_UB')
UNION ALL

select DISTINCT RECORD_ID record_id, 0 common_parent_key,smq_code  FROM ${stage_db_name}.${stage_schema_name}.LSMV_CC_SMQ_CMQ_TERMS_INFO_C WHERE CDC_OPERATION_TIME >(SELECT PARAM_VALUE FROM ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_ETL_CONFIG WHERE TARGET_TABLE_NAME ='LS_DB_CMQ_SMQ_HIER_TERM_SCOPE' AND PARAM_NAME='CDC_EXTRACT_TS_LB')
	AND CDC_OPERATION_TIME<= (SELECT PARAM_VALUE FROM ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_ETL_CONFIG WHERE TARGET_TABLE_NAME ='LS_DB_CMQ_SMQ_HIER_TERM_SCOPE' AND PARAM_NAME='CDC_EXTRACT_TS_UB')
union all
   select DISTINCT RECORD_ID record_id, 0 common_parent_key,smq_code   FROM ${stage_db_name}.${stage_schema_name}.LSMV_CC_SMQ_CMQ_LIST WHERE CDC_OPERATION_TIME >(SELECT PARAM_VALUE FROM ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_ETL_CONFIG WHERE TARGET_TABLE_NAME ='LS_DB_CMQ_SMQ_HIER_TERM_SCOPE' AND PARAM_NAME='CDC_EXTRACT_TS_LB')
	AND CDC_OPERATION_TIME<= (SELECT PARAM_VALUE FROM ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_ETL_CONFIG WHERE TARGET_TABLE_NAME ='LS_DB_CMQ_SMQ_HIER_TERM_SCOPE' AND PARAM_NAME='CDC_EXTRACT_TS_UB')
UNION ALL

select DISTINCT RECORD_ID record_id, 0 common_parent_key,smq_code  FROM ${stage_db_name}.${stage_schema_name}.LSMV_CC_SMQ_CMQ_LIST_C WHERE CDC_OPERATION_TIME >(SELECT PARAM_VALUE FROM ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_ETL_CONFIG WHERE TARGET_TABLE_NAME ='LS_DB_CMQ_SMQ_HIER_TERM_SCOPE' AND PARAM_NAME='CDC_EXTRACT_TS_LB')
	AND CDC_OPERATION_TIME<= (SELECT PARAM_VALUE FROM ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_ETL_CONFIG WHERE TARGET_TABLE_NAME ='LS_DB_CMQ_SMQ_HIER_TERM_SCOPE' AND PARAM_NAME='CDC_EXTRACT_TS_UB')


),
LSMV_CC_SMQ_CMQ_LIST_SUBSET AS 
(

  select * from 
    (SELECT RECORD_ID,
    current_timestamp AS ETL_DATE_CREATED,	SMQ_CODE,
	SMQ_NAME,
	SMQ_NAME_J,
	SMQ_LEVEL,
	MEDDRA_VERSION,
	STATUS,
	LIST_SOURCE,
	TERM_FROM,
	USER_ID,
	PRIVATE_QUERY_FLAG,
	SMQ_ALGORITHM,
	LANGUAGE_CODE,
	SMQ_DESCRIPTION,
	SMQ_DESCRIPTION_J,
	SMQ_NOTE,
	SMQ_SOURCE,
	CASE WHEN COALESCE(LSMV_CC_SMQ_CMQ_LIST.SPR_ID,'')='' then '-9999' else LSMV_CC_SMQ_CMQ_LIST.SPR_ID END AS SPR_ID
    ,row_number() OVER ( PARTITION BY RECORD_ID ORDER BY CDC_OPERATION_TIME DESC ) REC_RANK
FROM
	${stage_db_name}.${stage_schema_name}.LSMV_CC_SMQ_CMQ_LIST 
  WHERE  (RECORD_ID IN (SELECT record_id FROM LSMV_CASE_NO_SUBSET)
	or smq_code in (SELECT smq_code FROM LSMV_CASE_NO_SUBSET)
	)
	and RECORD_ID not in (SELECT RECORD_ID FROM  ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_DELETION_TMP  WHERE TABLE_NAME='LSMV_CC_SMQ_CMQ_LIST')
 ) where REC_RANK=1 
UNION
  
  
select * from 
    (
SELECT 	RECORD_ID,
    current_timestamp AS ETL_DATE_CREATED,
	SMQ_CODE,
	SMQ_NAME,
	SMQ_NAME_J,
	SMQ_LEVEL,
	MEDDRA_VERSION,
	STATUS,
	LIST_SOURCE,
	TERM_FROM,
	USER_ID,
	PRIVATE_QUERY_FLAG,
	SMQ_ALGORITHM,
	LANGUAGE_CODE,
	SMQ_DESCRIPTION,
	SMQ_DESCRIPTION_J,
	SMQ_NOTE,
	SMQ_SOURCE,
	CASE WHEN COALESCE(LSMV_CC_SMQ_CMQ_LIST_C.SPR_ID,'')='' then '-9999' else LSMV_CC_SMQ_CMQ_LIST_C.SPR_ID END AS SPR_ID
      ,row_number() OVER ( PARTITION BY RECORD_ID ORDER BY CDC_OPERATION_TIME DESC ) REC_RANK
FROM
	${stage_db_name}.${stage_schema_name}.LSMV_CC_SMQ_CMQ_LIST_C 
      wHERE  (RECORD_ID IN (SELECT record_id FROM LSMV_CASE_NO_SUBSET)
	or smq_code in (SELECT smq_code FROM LSMV_CASE_NO_SUBSET)
	)
	and RECORD_ID not in (SELECT RECORD_ID FROM  ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_DELETION_TMP  WHERE TABLE_NAME='LSMV_CC_SMQ_CMQ_LIST_C')
 ) where REC_RANK=1 )
,LSMV_CC_SMQ_CMQ_TERMS_INFO_SUBSET AS 
(
  select * from 
    (SELECT Record_ID,
	current_timestamp AS ETL_DATE_CREATED,
	SMQ_CODE,
	TERM_CODE,
	TERM_LEVEL,
	TERM_SCOPE,
	TERM_STATUS,
	TERM_ADDITION_VERSION,
	TERM_LAST_MODIFIED_VERSION,
	SMQ_MEDDRA_VERSION,
	TERM_MED_VERSION,
	SOC_CODE,
	TERM_CATEGORY,
	TERM_WEIGHT,
	LANGUAGE_CODE,
	CASE WHEN COALESCE(LSMV_CC_SMQ_CMQ_TERMS_INFO.SPR_ID,'')='' then '-9999' else LSMV_CC_SMQ_CMQ_TERMS_INFO.SPR_ID END AS SPR_ID
    ,row_number() OVER ( PARTITION BY RECORD_ID ORDER BY CDC_OPERATION_TIME DESC ) REC_RANK
FROM
	${stage_db_name}.${stage_schema_name}.LSMV_CC_SMQ_CMQ_TERMS_INFO
  WHERE  (RECORD_ID IN (SELECT record_id FROM LSMV_CASE_NO_SUBSET)
	or smq_code in (SELECT smq_code FROM LSMV_CASE_NO_SUBSET)
	)
	and 
  RECORD_ID not in (SELECT RECORD_ID FROM  ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_DELETION_TMP  WHERE TABLE_NAME='LSMV_CC_SMQ_CMQ_TERMS_INFO')
 ) where REC_RANK=1 AND TERM_STATUS='A' AND TERM_LEVEL IN ('0','4','5')
UNION
  

select * from 
    (
SELECT 	Record_ID,
	current_timestamp AS ETL_DATE_CREATED,
	SMQ_CODE,
	TERM_CODE,
	TERM_LEVEL,
	TERM_SCOPE,
	TERM_STATUS,
	TERM_ADDITION_VERSION,
	TERM_LAST_MODIFIED_VERSION,
	SMQ_MEDDRA_VERSION,
	TERM_MED_VERSION,
	SOC_CODE,
	TERM_CATEGORY,
	TERM_WEIGHT,
	LANGUAGE_CODE,
	CASE WHEN COALESCE(LSMV_CC_SMQ_CMQ_TERMS_INFO_C.SPR_ID,'')='' then '-9999' else LSMV_CC_SMQ_CMQ_TERMS_INFO_C.SPR_ID END AS SPR_ID
      ,row_number() OVER ( PARTITION BY RECORD_ID ORDER BY CDC_OPERATION_TIME DESC ) REC_RANK
FROM
	${stage_db_name}.${stage_schema_name}.LSMV_CC_SMQ_CMQ_TERMS_INFO_C 
      wHERE  (RECORD_ID IN (SELECT record_id FROM LSMV_CASE_NO_SUBSET)
	or smq_code in (SELECT smq_code FROM LSMV_CASE_NO_SUBSET)
	)
	and RECORD_ID not in (SELECT RECORD_ID FROM  ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_DELETION_TMP  
   WHERE TABLE_NAME='LSMV_CC_SMQ_CMQ_TERMS_INFO_C')
) where REC_RANK=1 AND TERM_STATUS='A' AND TERM_LEVEL IN ('0','4','5'))  
 
   
   
   
   
select B.SMQ_CODE,
       B.SMQ_NAME,
	   B.MEDDRA_VERSION,
	   A.TERM_CODE,
	   A.TERM_LEVEL,
	   A.TERM_SCOPE,
	   A.TERM_STATUS,
	   A.TERM_ADDITION_VERSION,
	   A.TERM_LAST_MODIFIED_VERSION,
	   A.TERM_MED_VERSION,
	   A.SOC_CODE,
	   A.TERM_CATEGORY,
	   A.TERM_WEIGHT,
       B.SMQ_LEVEL,
	   B.LIST_SOURCE,
	   B.STATUS,
	   B.LANGUAGE_CODE,
	   A.smq_algorithm,
	   A.SPR_ID,
	   0 IS_DELETED,
       A.ETL_DATE_CREATED,
       cast(1 as int) as ETL_LOAD_STATUS
FROM
(SELECT b.record_id,
	b.SMQ_CODE,
	b.SMQ_MEDDRA_VERSION AS MEDDRA_VERSION,
	b.TERM_CODE,
	b.TERM_LEVEL,
	b.TERM_SCOPE,
	b.TERM_STATUS,
	b.TERM_ADDITION_VERSION,
	b.TERM_LAST_MODIFIED_VERSION,
	b.TERM_MED_VERSION,
	b.SOC_CODE,
	b.TERM_CATEGORY,
	b.TERM_WEIGHT,
    NVL(b.LANGUAGE_CODE,'001') LANGUAGE_CODE,
     null as smq_algorithm,
     b.SPR_ID,
	0 IS_DELETED,
    b.ETL_DATE_CREATED
FROM
	LSMV_CC_SMQ_CMQ_TERMS_INFO_SUBSET b 
union
SELECT b.record_id,
	b.SMQ_CODE,
	b.SMQ_MEDDRA_VERSION AS MEDDRA_VERSION,
	b.TERM_CODE,
	b.TERM_LEVEL,
	'1' TERM_SCOPE,
	b.TERM_STATUS,
	b.TERM_ADDITION_VERSION,
	b.TERM_LAST_MODIFIED_VERSION,
	b.TERM_MED_VERSION,
	b.SOC_CODE,
	b.TERM_CATEGORY,
	b.TERM_WEIGHT,
     NVL(b.LANGUAGE_CODE,'001') LANGUAGE_CODE,
    null as smq_algorithm,
    b.SPR_ID,
    0 IS_DELETED,
    b.ETL_DATE_CREATED
FROM
	LSMV_CC_SMQ_CMQ_TERMS_INFO_SUBSET b
WHERE b.TERM_SCOPE=2 
union
SELECT b.record_id,
    b.SMQ_CODE,
	b.SMQ_MEDDRA_VERSION AS MEDDRA_VERSION,
	b.TERM_CODE,
	b.TERM_LEVEL,
	b.TERM_SCOPE,
	b.TERM_STATUS,
	b.TERM_ADDITION_VERSION,
	b.TERM_LAST_MODIFIED_VERSION,
	b.TERM_MED_VERSION,
	b.SOC_CODE,
	b.TERM_CATEGORY,
	b.TERM_WEIGHT,
    NVL(b.LANGUAGE_CODE,'001') LANGUAGE_CODE,
    c.smq_algorithm,
    b.SPR_ID,
    0 IS_DELETED,
    b.ETL_DATE_CREATED
FROM
	LSMV_CC_SMQ_CMQ_TERMS_INFO_SUBSET b
	INNER JOIN LSMV_CC_SMQ_CMQ_LIST_SUBSET c 
	on b.smq_code=c.smq_code
	and b.SMQ_MEDDRA_VERSION = c.MEDDRA_VERSION
WHERE c.smq_algorithm <> 'N'
) A LEFT JOIN (SELECT
	COALESCE (SMQ_CODE, -1) AS SMQ_CODE,
	SMQ_NAME,
	COALESCE (MEDDRA_VERSION,'-1') AS MEDDRA_VERSION,
	SMQ_LEVEL,
	LIST_SOURCE,
	STATUS,
	LANGUAGE_CODE,
	SPR_ID
FROM
	${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_CMQ_SMQ) B ON A.SMQ_CODE =B.SMQ_CODE
	and A.MEDDRA_VERSION =B.MEDDRA_VERSION
	and A.SPR_ID =B.SPR_ID
	and A.LANGUAGE_CODE =B.LANGUAGE_CODE
;

   
   
TRUNCATE TABLE ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.etl_cmq_smq_level1;
insert into ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.etl_cmq_smq_level1(SMQ_CODE,SMQ_NAME,MEDDRA_VERSION,TERM_CODE,TERM_LEVEL,TERM_SCOPE,
			TERM_STATUS,TERM_ADDITION_VERSION,TERM_LAST_MODIFIED_VERSION,
			TERM_MED_VERSION,SOC_CODE,TERM_CATEGORY,TERM_WEIGHT,LVL,LANGUAGE_CODE,IS_DELETED,
          	ETL_DATE_CREATED,SMQ_ALGORITHM,SPR_ID)	
SELECT DISTINCT 
			A1.SMQ_CODE,
			A1.SMQ_NAME,
			A1.MEDDRA_VERSION,
			A1.TERM_CODE,
			A1.TERM_LEVEL,
			A1.TERM_SCOPE,
			A1.TERM_STATUS,
			A1.TERM_ADDITION_VERSION,
			A1.TERM_LAST_MODIFIED_VERSION,
			A1.TERM_MED_VERSION,
			A1.SOC_CODE,
			A1.TERM_CATEGORY,
			A1.TERM_WEIGHT,
			1 LVL,
			A1.LANGUAGE_CODE,
			A1.IS_DELETED,
          	A1.ETL_DATE_CREATED,
			A1.SMQ_ALGORITHM,
 		A1.SPR_ID
FROM
${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_L1_TMP A1
;

TRUNCATE TABLE ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.etl_cmq_smq_level2;
insert into ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.etl_cmq_smq_level2 (SMQ_CODE,SMQ_NAME,MEDDRA_VERSION,TERM_CODE,TERM_LEVEL,TERM_SCOPE,
			TERM_STATUS,TERM_ADDITION_VERSION,TERM_LAST_MODIFIED_VERSION,
			TERM_MED_VERSION,SOC_CODE,TERM_CATEGORY,TERM_WEIGHT,LVL,LANGUAGE_CODE,IS_DELETED,
          	ETL_DATE_CREATED,SMQ_ALGORITHM,SPR_ID)	
SELECT DISTINCT A1.SMQ_CODE,
			A1.SMQ_NAME,
			A1.MEDDRA_VERSION,
			A1.TERM_CODE,
			A1.TERM_LEVEL,
			A1.TERM_SCOPE,
			A1.TERM_STATUS,
			A1.TERM_ADDITION_VERSION,
			A1.TERM_LAST_MODIFIED_VERSION,
			A1.TERM_MED_VERSION,
			A1.SOC_CODE,
			A1.TERM_CATEGORY,
			A1.TERM_WEIGHT,
			2 LVL,
			A1.LANGUAGE_CODE,
			A1.IS_DELETED,
          	A1.ETL_DATE_CREATED,
			A1.SMQ_ALGORITHM,
 		A1.SPR_ID
FROM
${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_L1_TMP A1
	WHERE  
	(A1.SMQ_CODE,A1.MEDDRA_VERSION) 
	IN (SELECT A2.TERM_CODE ,A2.MEDDRA_VERSION FROM ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_L1_TMP A2
          )
;

TRUNCATE TABLE ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.etl_cmq_smq_level3;
insert into ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.etl_cmq_smq_level3 (SMQ_CODE,SMQ_NAME,MEDDRA_VERSION,TERM_CODE,TERM_LEVEL,TERM_SCOPE,
			TERM_STATUS,TERM_ADDITION_VERSION,TERM_LAST_MODIFIED_VERSION,
			TERM_MED_VERSION,SOC_CODE,TERM_CATEGORY,TERM_WEIGHT,LVL,LANGUAGE_CODE,IS_DELETED,
          	ETL_DATE_CREATED,SMQ_ALGORITHM,SPR_ID)	
SELECT DISTINCT 
			A1.SMQ_CODE,
			A1.SMQ_NAME,
			A1.MEDDRA_VERSION,
			A1.TERM_CODE,
			A1.TERM_LEVEL,
			A1.TERM_SCOPE,
			A1.TERM_STATUS,
			A1.TERM_ADDITION_VERSION,
			A1.TERM_LAST_MODIFIED_VERSION,
			A1.TERM_MED_VERSION,
			A1.SOC_CODE,
			A1.TERM_CATEGORY,
			A1.TERM_WEIGHT,
			3 LVL,
			A1.LANGUAGE_CODE,
           	A1.IS_DELETED,
          	A1.ETL_DATE_CREATED,
	        A1.SMQ_ALGORITHM,
 		    A1.SPR_ID
FROM
${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_L1_TMP A1
	WHERE  
	(A1.SMQ_CODE,A1.MEDDRA_VERSION) 
	IN (SELECT A2.TERM_CODE ,A2.MEDDRA_VERSION FROM ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_L1_TMP A2
		WHERE (A2.SMQ_CODE,A2.MEDDRA_VERSION) 
		IN (SELECT A3.TERM_CODE ,A3.MEDDRA_VERSION FROM ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_L1_TMP A3
			
       )
    )
;

TRUNCATE TABLE ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.etl_cmq_smq_level4;
insert into ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.etl_cmq_smq_level4 (SMQ_CODE,SMQ_NAME,MEDDRA_VERSION,TERM_CODE,TERM_LEVEL,TERM_SCOPE,
			TERM_STATUS,TERM_ADDITION_VERSION,TERM_LAST_MODIFIED_VERSION,
			TERM_MED_VERSION,SOC_CODE,TERM_CATEGORY,TERM_WEIGHT,LVL,LANGUAGE_CODE,IS_DELETED,
          	ETL_DATE_CREATED,SMQ_ALGORITHM,SPR_ID)	
SELECT DISTINCT 
			A1.SMQ_CODE,
			A1.SMQ_NAME,
			A1.MEDDRA_VERSION,
			A1.TERM_CODE,
			A1.TERM_LEVEL,
			A1.TERM_SCOPE,
			A1.TERM_STATUS,
			A1.TERM_ADDITION_VERSION,
			A1.TERM_LAST_MODIFIED_VERSION,
			A1.TERM_MED_VERSION,
			A1.SOC_CODE,
			A1.TERM_CATEGORY,
			A1.TERM_WEIGHT,
			4 LVL,
			A1.LANGUAGE_CODE,
           	A1.IS_DELETED,
          	A1.ETL_DATE_CREATED,
            A1.SMQ_ALGORITHM,
 		    A1.SPR_ID
FROM
${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_L1_TMP A1
	WHERE  
	(A1.SMQ_CODE,A1.MEDDRA_VERSION) 
	IN (SELECT A2.TERM_CODE ,A2.MEDDRA_VERSION FROM ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_L1_TMP A2
		WHERE (A2.SMQ_CODE,A2.MEDDRA_VERSION) 
		IN (SELECT A3.TERM_CODE ,A3.MEDDRA_VERSION FROM ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_L1_TMP A3
			WHERE (A3.SMQ_CODE,A3.MEDDRA_VERSION) 
			IN (SELECT A4.TERM_CODE ,A4.MEDDRA_VERSION FROM ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_L1_TMP A4
				
             )
       )
    )
;

TRUNCATE TABLE ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.etl_cmq_smq_level5;
insert into ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.etl_cmq_smq_level5 (SMQ_CODE,SMQ_NAME,MEDDRA_VERSION,TERM_CODE,TERM_LEVEL,TERM_SCOPE,
			TERM_STATUS,TERM_ADDITION_VERSION,TERM_LAST_MODIFIED_VERSION,
			TERM_MED_VERSION,SOC_CODE,TERM_CATEGORY,TERM_WEIGHT,LVL,LANGUAGE_CODE,IS_DELETED,
          	ETL_DATE_CREATED,SMQ_ALGORITHM,SPR_ID)	
SELECT DISTINCT 
			A1.SMQ_CODE,
			A1.SMQ_NAME,
			A1.MEDDRA_VERSION,
			A1.TERM_CODE,
			A1.TERM_LEVEL,
			A1.TERM_SCOPE,
			A1.TERM_STATUS,
			A1.TERM_ADDITION_VERSION,
			A1.TERM_LAST_MODIFIED_VERSION,
			A1.TERM_MED_VERSION,
			A1.SOC_CODE,
			A1.TERM_CATEGORY,
			A1.TERM_WEIGHT,
			5 LVL,
			A1.LANGUAGE_CODE,
           	A1.IS_DELETED,
          	A1.ETL_DATE_CREATED,
            A1.SMQ_ALGORITHM,
 		    A1.SPR_ID
FROM
${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_L1_TMP A1
	WHERE  
	(A1.SMQ_CODE,A1.MEDDRA_VERSION) 
	IN (SELECT A2.TERM_CODE ,A2.MEDDRA_VERSION FROM ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_L1_TMP A2
		WHERE (A2.SMQ_CODE,A2.MEDDRA_VERSION) 
		IN (SELECT A3.TERM_CODE ,A3.MEDDRA_VERSION FROM ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_L1_TMP A3
			WHERE (A3.SMQ_CODE,A3.MEDDRA_VERSION) 
			IN (SELECT A4.TERM_CODE ,A4.MEDDRA_VERSION FROM ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_L1_TMP A4
				WHERE (A4.SMQ_CODE,A4.MEDDRA_VERSION) 
				IN (SELECT A5.TERM_CODE ,A5.MEDDRA_VERSION FROM ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_L1_TMP A5
                  )
             )
       )
    )
;

TRUNCATE TABLE ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.etl_cmq_smq_level6;
insert into ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.etl_cmq_smq_level6 (SMQ_CODE,SMQ_NAME,MEDDRA_VERSION,TERM_CODE,TERM_LEVEL,TERM_SCOPE,
			TERM_STATUS,TERM_ADDITION_VERSION,TERM_LAST_MODIFIED_VERSION,
			TERM_MED_VERSION,SOC_CODE,TERM_CATEGORY,TERM_WEIGHT,LVL,LANGUAGE_CODE,IS_DELETED,
          	ETL_DATE_CREATED,SMQ_ALGORITHM,SPR_ID)		
SELECT DISTINCT 
			A1.SMQ_CODE,
			A1.SMQ_NAME,
			A1.MEDDRA_VERSION,
			A1.TERM_CODE,
			A1.TERM_LEVEL,
			A1.TERM_SCOPE,
			A1.TERM_STATUS,
			A1.TERM_ADDITION_VERSION,
			A1.TERM_LAST_MODIFIED_VERSION,
			A1.TERM_MED_VERSION,
			A1.SOC_CODE,
			A1.TERM_CATEGORY,
			A1.TERM_WEIGHT,
			6 LVL,
			A1.LANGUAGE_CODE,
           	A1.IS_DELETED,
          	A1.ETL_DATE_CREATED,
            A1.SMQ_ALGORITHM,
 		    A1.SPR_ID
FROM
${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_L1_TMP A1
	WHERE  
	(A1.SMQ_CODE,A1.MEDDRA_VERSION) 
	IN (SELECT A2.TERM_CODE ,A2.MEDDRA_VERSION FROM ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_L1_TMP A2
		WHERE (A2.SMQ_CODE,A2.MEDDRA_VERSION) 
		IN (SELECT A3.TERM_CODE ,A3.MEDDRA_VERSION FROM ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_L1_TMP A3
			WHERE (A3.SMQ_CODE,A3.MEDDRA_VERSION) 
			IN (SELECT A4.TERM_CODE ,A4.MEDDRA_VERSION FROM ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_L1_TMP A4
				WHERE (A4.SMQ_CODE,A4.MEDDRA_VERSION) 
				IN (SELECT A5.TERM_CODE ,A5.MEDDRA_VERSION FROM ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_L1_TMP A5
				    WHERE (A5.SMQ_CODE,A5.MEDDRA_VERSION) 
				    IN (SELECT A6.TERM_CODE ,A6.MEDDRA_VERSION FROM ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_L1_TMP A6
                       )
                  )
             )
       )
    )
;

TRUNCATE TABLE ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.etl_cmq_smq_level7;
insert into ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.etl_cmq_smq_level7 (SMQ_CODE,SMQ_NAME,MEDDRA_VERSION,TERM_CODE,TERM_LEVEL,TERM_SCOPE,
			TERM_STATUS,TERM_ADDITION_VERSION,TERM_LAST_MODIFIED_VERSION,
			TERM_MED_VERSION,SOC_CODE,TERM_CATEGORY,TERM_WEIGHT,LVL,LANGUAGE_CODE,IS_DELETED,
          	ETL_DATE_CREATED,SMQ_ALGORITHM,SPR_ID)	
SELECT DISTINCT 
			A1.SMQ_CODE,
			A1.SMQ_NAME,
			A1.MEDDRA_VERSION,
			A1.TERM_CODE,
			A1.TERM_LEVEL,
			A1.TERM_SCOPE,
			A1.TERM_STATUS,
			A1.TERM_ADDITION_VERSION,
			A1.TERM_LAST_MODIFIED_VERSION,
			A1.TERM_MED_VERSION,
			A1.SOC_CODE,
			A1.TERM_CATEGORY,
			A1.TERM_WEIGHT,
			7 LVL,
			A1.LANGUAGE_CODE,
            A1.IS_DELETED,
          	A1.ETL_DATE_CREATED,
            A1.SMQ_ALGORITHM,
 		    A1.SPR_ID
FROM
${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_L1_TMP A1
	WHERE  
	(A1.SMQ_CODE,A1.MEDDRA_VERSION) 
	IN (SELECT A2.TERM_CODE ,A2.MEDDRA_VERSION FROM ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_L1_TMP A2
		WHERE (A2.SMQ_CODE,A2.MEDDRA_VERSION) 
		IN (SELECT A3.TERM_CODE ,A3.MEDDRA_VERSION FROM ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_L1_TMP A3
			WHERE (A3.SMQ_CODE,A3.MEDDRA_VERSION) 
			IN (SELECT A4.TERM_CODE ,A4.MEDDRA_VERSION FROM ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_L1_TMP A4
				WHERE (A4.SMQ_CODE,A4.MEDDRA_VERSION) 
				IN (SELECT A5.TERM_CODE ,A5.MEDDRA_VERSION FROM ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_L1_TMP A5
				    WHERE (A5.SMQ_CODE,A5.MEDDRA_VERSION) 
				    IN (SELECT A6.TERM_CODE ,A6.MEDDRA_VERSION FROM ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_L1_TMP A6
					    WHERE (A6.SMQ_CODE,A6.MEDDRA_VERSION) 
							IN (SELECT A7.TERM_CODE ,A7.MEDDRA_VERSION FROM ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_L1_TMP A7
								)
                       )
                  )
             )
       )
    )
;


truncate table ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_CMQ_SMQ_HIER_TERM_SCOPE;


insert into ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_CMQ_SMQ_HIER_TERM_SCOPE (SMQ_CODE_L1,
	SMQ_LEVEL_L1,
	TERM_CODE_L1,
	TERM_LEVEL_L1,
	SMQ_CODE_L2,
	SMQ_LEVEL_L2,
	TERM_CODE_L2,
	TERM_LEVEL_L2,
	SMQ_CODE_L3,
	SMQ_LEVEL_L3,
	TERM_CODE_L3,
	TERM_LEVEL_L3,
	SMQ_CODE_L4,
	SMQ_LEVEL_L4,
	TERM_CODE_L4,
	TERM_LEVEL_L4,
	SMQ_CODE_L5,
	SMQ_LEVEL_L5,
	TERM_CODE_L5,
	TERM_LEVEL_L5,
	SMQ_CODE_L6,
	SMQ_LEVEL_L6,
	TERM_CODE_L6,
	TERM_LEVEL_L6,
	SMQ_CODE_L7,
	SMQ_LEVEL_L7,
	TERM_LEVEL_L7,
	TERM_CODE,
	TERM_LEVEL,
	MEDDRA_VERSION,
	TERM_SCOPE,
    SMQ_TERM_SCOPE,
	TERM_STATUS,
	TERM_ADDITION_VERSION,
	TERM_LAST_MODIFIED_VERSION,
	TERM_MED_VERSION,
	SOC_CODE,
	TERM_CATEGORY,
	TERM_WEIGHT,
	LANGUAGE_CODE,
	BK_SMQ_TERM_SCOPE,
	SMQ_ALGORITHM,
    IS_DELETED,
    ETL_DATE_CREATED,
	etl_load_status,
	SPR_ID,
   	PROCESS_DATE ,
    EXPIRY_DATE , 
    LOAD_TS ,
    INTEGRATION_ID 
   )
SELECT
SMQ_CODE_L1,
	SMQ_LEVEL_L1,
	TERM_CODE_L1,
	TERM_LEVEL_L1,
	SMQ_CODE_L2,
	SMQ_LEVEL_L2,
	TERM_CODE_L2,
	TERM_LEVEL_L2,
	SMQ_CODE_L3,
	SMQ_LEVEL_L3,
	TERM_CODE_L3,
	TERM_LEVEL_L3,
	SMQ_CODE_L4,
	SMQ_LEVEL_L4,
	TERM_CODE_L4,
	TERM_LEVEL_L4,
	SMQ_CODE_L5,
	SMQ_LEVEL_L5,
	TERM_CODE_L5,
	TERM_LEVEL_L5,
	SMQ_CODE_L6,
	SMQ_LEVEL_L6,
	TERM_CODE_L6,
	TERM_LEVEL_L6,
	SMQ_CODE_L7,
	SMQ_LEVEL_L7,
	TERM_LEVEL_L7,
	TERM_CODE,
	TERM_LEVEL,
	MEDDRA_VERSION,
	TERM_SCOPE,
    SMQ_TERM_SCOPE,
	TERM_STATUS,
	TERM_ADDITION_VERSION,
	TERM_LAST_MODIFIED_VERSION,
	TERM_MED_VERSION,
	SOC_CODE,
	TERM_CATEGORY,
	TERM_WEIGHT,
	LANGUAGE_CODE,
	SMQ_CODE_L1 || TERM_SCOPE || TERM_CODE  || TERM_LEVEL || MEDDRA_VERSION AS BK_SMQ_TERM_SCOPE,
	SMQ_ALGORITHM,
    IS_DELETED,
    ETL_DATE_CREATED,
	1 etl_load_status,
    SPR_ID,
    to_date(ETL_DATE_CREATED) process_date,
    TO_DATE('9999-31-12','YYYY-DD-MM') EXPIRY_DATE , 
    current_timestamp LOAD_TS ,
    CONCAT(NVL(SMQ_CODE_L1,-1),'||',NVL(SMQ_CODE_L2,-1),'||',NVL(SMQ_CODE_L3,-1),'||',NVL(SMQ_CODE_L4,-1),'||',NVL(SMQ_CODE_L5,-1),'||',NVL(SMQ_CODE_L6,-1),'||',NVL(SMQ_CODE_L1,-7)) INTEGRATION_ID 
FROM
(
SELECT
	SMQ_CODE_L1,
	SMQ_LEVEL_L1,
	TERM_CODE_L1,
	TERM_LEVEL_L1,
	SMQ_CODE_L2,
	SMQ_LEVEL_L2,
	TERM_CODE_L2,
	TERM_LEVEL_L2,
	SMQ_CODE_L3,
	SMQ_LEVEL_L3,
	TERM_CODE_L3,
	TERM_LEVEL_L3,
	SMQ_CODE_L4,
	SMQ_LEVEL_L4,
	TERM_CODE_L4,
	TERM_LEVEL_L4,
	SMQ_CODE_L5,
	SMQ_LEVEL_L5,
	TERM_CODE_L5,
	TERM_LEVEL_L5,
	SMQ_CODE_L6,
	SMQ_LEVEL_L6,
	TERM_CODE_L6,
	TERM_LEVEL_L6,
	SMQ_CODE_L7,
	SMQ_LEVEL_L7,
	TERM_LEVEL_L7,
	(CASE WHEN SMQ_CODE_L2 = TERM_CODE_L1
	THEN TERM_CODE_L1
	WHEN SMQ_CODE_L3 = TERM_CODE_L2
	THEN TERM_CODE_L2
	WHEN SMQ_CODE_L4 = TERM_CODE_L3 
	THEN TERM_CODE_L3
	WHEN SMQ_CODE_L5 = TERM_CODE_L4 
	THEN TERM_CODE_L4
	WHEN SMQ_CODE_L6 = TERM_CODE_L5 
	THEN TERM_CODE_L5
	WHEN SMQ_CODE_L7 = TERM_CODE_L6 
	THEN TERM_CODE_L6
	ELSE NULL
	END) TERM_CODE,
	(CASE WHEN SMQ_CODE_L2 = TERM_CODE_L1
	THEN TERM_LEVEL_L2
	WHEN SMQ_CODE_L3 = TERM_CODE_L2
	THEN TERM_LEVEL_L3
	WHEN SMQ_CODE_L4 = TERM_CODE_L3 
	THEN TERM_LEVEL_L4
	WHEN SMQ_CODE_L5 = TERM_CODE_L4 
	THEN TERM_LEVEL_L5
	WHEN SMQ_CODE_L6 = TERM_CODE_L5 
	THEN TERM_LEVEL_L6
	WHEN SMQ_CODE_L7 = TERM_CODE_L6 
	THEN TERM_LEVEL_L7
	ELSE NULL
	END) TERM_LEVEL,
	MEDDRA_VERSION,
	TERM_SCOPE,
  case when COALESCE(SMQ_ALGORITHM,'N') <> 'N'
then SMQ_CODE_L1 || ' (Algorithm)'
else
case
when TERM_SCOPE = '0'
then SMQ_CODE_L1 || ' (SMQ)'
when TERM_SCOPE = '1'
then SMQ_CODE_L1 || ' (Broad)'
when TERM_SCOPE = '2'
then SMQ_CODE_L1 || ' (Narrow)'
else null end
end as SMQ_TERM_SCOPE,
	TERM_STATUS,
	TERM_ADDITION_VERSION,
	TERM_LAST_MODIFIED_VERSION,
	TERM_MED_VERSION,
	SOC_CODE,
	TERM_CATEGORY,
	TERM_WEIGHT,
	LANGUAGE_CODE,
	SMQ_ALGORITHM,
    ETL_DATE_CREATED   ,
	IS_DELETED,
	SPR_ID
FROM 
	(
	SELECT DISTINCT 
		T1.SMQ_CODE SMQ_CODE_L1,
		T1.LVL SMQ_LEVEL_L1,
		(CASE WHEN T1.TERM_CODE = T2.SMQ_CODE
		THEN NULL
		ELSE T1.TERM_CODE
		END) TERM_CODE_L1,
		'0' TERM_LEVEL_L1,
		(CASE WHEN T1.TERM_CODE = T2.SMQ_CODE 
		THEN T2.SMQ_CODE
		ELSE T1.TERM_CODE
		END) SMQ_CODE_L2,
		T2.LVL SMQ_LEVEL_L2,
		(CASE WHEN T2.TERM_CODE = T3.SMQ_CODE 
		THEN NULL
		ELSE T2.TERM_CODE
		END) TERM_CODE_L2,
		T1.TERM_LEVEL as TERM_LEVEL_L2,
		(CASE WHEN T2.TERM_CODE = T3.SMQ_CODE 
		THEN T3.SMQ_CODE
		ELSE T2.TERM_CODE
		END) SMQ_CODE_L3,
		T3.LVL SMQ_LEVEL_L3,
		(CASE WHEN T3.TERM_CODE = T4.SMQ_CODE 
		THEN NULL
		ELSE T3.TERM_CODE
		END) TERM_CODE_L3,
		T2.TERM_LEVEL as TERM_LEVEL_L3,
		(CASE WHEN T3.TERM_CODE = T4.SMQ_CODE 
		THEN T4.SMQ_CODE
		ELSE T3.TERM_CODE
		END) SMQ_CODE_L4,
		T4.LVL SMQ_LEVEL_L4,
		(CASE WHEN T4.TERM_CODE = T5.SMQ_CODE 
		THEN NULL
		ELSE T4.TERM_CODE
		END) TERM_CODE_L4,
		T3.TERM_LEVEL as TERM_LEVEL_L4,
		(CASE WHEN T4.TERM_CODE = T5.SMQ_CODE 
		THEN T5.SMQ_CODE
		ELSE T4.TERM_CODE
		END) SMQ_CODE_L5,
		T5.LVL SMQ_LEVEL_L5,
		(CASE WHEN T5.TERM_CODE = T6.SMQ_CODE 
		THEN NULL 
		ELSE T5.TERM_CODE
		END) TERM_CODE_L5,
		T4.TERM_LEVEL as TERM_LEVEL_L5,
		(CASE WHEN T5.TERM_CODE = T6.SMQ_CODE 
		THEN T6.SMQ_CODE
		ELSE T5.TERM_CODE
		END) SMQ_CODE_L6,
		T6.LVL SMQ_LEVEL_L6,
		(CASE WHEN T6.TERM_CODE = T7.SMQ_CODE 
		THEN NULL
		ELSE T6.TERM_CODE
		END) TERM_CODE_L6,
		T5.TERM_LEVEL as TERM_LEVEL_L6,
		(CASE WHEN T6.TERM_CODE = T7.SMQ_CODE 
		THEN T7.SMQ_CODE
		ELSE T6.TERM_CODE
		END) SMQ_CODE_L7,
		T7.LVL SMQ_LEVEL_L7,
		T6.TERM_LEVEL as TERM_LEVEL_L7,
		T1.MEDDRA_VERSION,
		COALESCE( T7.TERM_SCOPE, T6.TERM_SCOPE,T5.TERM_SCOPE,T4.TERM_SCOPE,T3.TERM_SCOPE,T2.TERM_SCOPE,T1.TERM_SCOPE) TERM_SCOPE,
		T1.TERM_STATUS,
		T1.TERM_ADDITION_VERSION,
		T1.TERM_LAST_MODIFIED_VERSION,
		T1.TERM_MED_VERSION,
		T1.SOC_CODE,
		T1.TERM_CATEGORY,
		T1.TERM_WEIGHT,
		T1.LANGUAGE_CODE,
	    COALESCE( T7.SMQ_ALGORITHM, T6.SMQ_ALGORITHM,T5.SMQ_ALGORITHM,T4.SMQ_ALGORITHM,T3.SMQ_ALGORITHM,T2.SMQ_ALGORITHM,T1.SMQ_ALGORITHM) SMQ_ALGORITHM,
         COALESCE( T7.IS_DELETED, T6.IS_DELETED,T5.IS_DELETED,T4.IS_DELETED,T3.IS_DELETED,T2.IS_DELETED,T1.IS_DELETED) IS_DELETED,
		COALESCE( T7.ETL_DATE_CREATED, T6.ETL_DATE_CREATED,T5.ETL_DATE_CREATED,T4.ETL_DATE_CREATED,T3.ETL_DATE_CREATED,T2.ETL_DATE_CREATED,T1.ETL_DATE_CREATED) ETL_DATE_CREATED,
		T1.SPR_ID
	FROM 
		${tenant_transfm_db_name}.${tenant_transfm_schema_name}.ETL_CMQ_SMQ_LEVEL1 T1,
		${tenant_transfm_db_name}.${tenant_transfm_schema_name}.ETL_CMQ_SMQ_LEVEL2 T2,
		${tenant_transfm_db_name}.${tenant_transfm_schema_name}.ETL_CMQ_SMQ_LEVEL3 T3,
		${tenant_transfm_db_name}.${tenant_transfm_schema_name}.ETL_CMQ_SMQ_LEVEL4 T4,
		${tenant_transfm_db_name}.${tenant_transfm_schema_name}.ETL_CMQ_SMQ_LEVEL5 T5,
		${tenant_transfm_db_name}.${tenant_transfm_schema_name}.ETL_CMQ_SMQ_LEVEL6 T6,
		${tenant_transfm_db_name}.${tenant_transfm_schema_name}.ETL_CMQ_SMQ_LEVEL7 T7
	WHERE
		T1.TERM_CODE = T2.SMQ_CODE(+)
		AND T1.LANGUAGE_CODE = T2.LANGUAGE_CODE(+)
		AND T1.MEDDRA_VERSION = T2.MEDDRA_VERSION(+)
		AND T2.TERM_CODE = T3.SMQ_CODE(+)
		AND T2.LANGUAGE_CODE = T3.LANGUAGE_CODE(+)
		AND T2.MEDDRA_VERSION = T3.MEDDRA_VERSION(+)
		AND T3.TERM_CODE = T4.SMQ_CODE(+)
		AND T3.LANGUAGE_CODE = T4.LANGUAGE_CODE(+)
		AND T3.MEDDRA_VERSION = T4.MEDDRA_VERSION(+)
		AND T4.TERM_CODE = T5.SMQ_CODE(+)
		AND T4.LANGUAGE_CODE = T5.LANGUAGE_CODE(+)
		AND T4.MEDDRA_VERSION = T5.MEDDRA_VERSION(+)
		AND T5.TERM_CODE = T6.SMQ_CODE(+)
		AND T5.LANGUAGE_CODE = T6.LANGUAGE_CODE(+)
		AND T5.MEDDRA_VERSION = T6.MEDDRA_VERSION(+)
		AND T6.TERM_CODE = T7.SMQ_CODE(+)
		AND T6.LANGUAGE_CODE = T7.LANGUAGE_CODE(+)
		AND T6.MEDDRA_VERSION = T7.MEDDRA_VERSION(+)
	)
	)
;




TRUNCATE TABLE ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.TMP_CMQ_UPD_EXPIRY;
INSERT INTO ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.TMP_CMQ_UPD_EXPIRY(SMQ_CODE_L1,TERM_CODE,TERM_LEVEL,ETL_DATE_CREATED,NEXT_ETL_DATE_CREATED)
 SELECT 
  SMQ_CODE_L1,TERM_CODE,TERM_LEVEL,ETL_DATE_CREATED,NEXT_ETL_DATE_CREATED
  FROM 
  (
   SELECT 
  SMQ_CODE_L1,TERM_CODE,TERM_LEVEL,
      ETL_DATE_CREATED,
  lead (ETL_DATE_CREATED,1) OVER (PARTITION BY SMQ_CODE_L1,TERM_CODE,TERM_LEVEL 
  ORDER BY ETL_DATE_CREATED) AS NEXT_ETL_DATE_CREATED,
  EXPIRY_DATE
FROM (select distinct a.SMQ_CODE_L1,a.TERM_CODE,a.TERM_LEVEL,a.ETL_DATE_CREATED,
a.EXPIRY_DATE 
from ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_CMQ_SMQ_HIER_TERM_SCOPE a ,  ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_CMQ_SMQ b
where 
a.SMQ_CODE_L1=b.SMQ_CODE
and b.LIST_SOURCE='1'
) TERM_SCOPE_W ) 
WHERE NEXT_ETL_DATE_CREATED IS NOT NULL ;



UPDATE ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_CMQ_SMQ_HIER_TERM_SCOPE
           SET EXPIRY_DATE = A.NEXT_ETL_DATE_CREATED
		   
		   FROM 
		   (SELECT  T1.SK_CMQ_SMQ_HIER_TERM_SCOPE_WID AS SK_CMQ_SMQ_HIER_TERM_SCOPE_WID, T2.NEXT_ETL_DATE_CREATED
        FROM    ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_CMQ_SMQ_HIER_TERM_SCOPE T1
        JOIN    ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.TMP_CMQ_UPD_EXPIRY T2
        ON      T1.SMQ_CODE_L1 = T2.SMQ_CODE_L1
		AND  T1.TERM_CODE = T2.TERM_CODE
		AND  T1.TERM_LEVEL = T2.TERM_LEVEL
        AND  T1.ETL_DATE_CREATED = T2.ETL_DATE_CREATED) A
         WHERE LS_DB_CMQ_SMQ_HIER_TERM_SCOPE.SK_CMQ_SMQ_HIER_TERM_SCOPE_WID = A.SK_CMQ_SMQ_HIER_TERM_SCOPE_WID;




UPDATE ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_CMQ_SMQ_HIER_TERM_SCOPE 
SET LANGUAGE_WID= A.SK_LANGUAGE_WID
FROM (SELECT 
		SK_LANGUAGE_WID, 
		COALESCE(CODE, '-1') LANGUAGE_CODE, 
		COALESCE(SPR_ID,'-9999') SPR_ID
		FROM ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_LANGUAGE WHERE EXPIRY_DATE = TO_DATE('9999-31-12','YYYY-DD-MM')
	) A
WHERE
   COALESCE(LS_DB_CMQ_SMQ_HIER_TERM_SCOPE.LANGUAGE_CODE,-1)= A.LANGUAGE_CODE 
    AND COALESCE(LS_DB_CMQ_SMQ_HIER_TERM_SCOPE.SPR_ID,'-9999')= A.SPR_ID ;




/*


SELECT COALESCE(BK_CMQ_SMQ_WID,'-1') AS BK_CMQ_SMQ_WID
,to_date(GREATEST(NVL(f.DATE_MODIFIED ,TO_DATE('1900-01-01','YYYY-DD-MM'))))PROCESSING_DT
,TO_DATE('9999-31-12','YYYY-DD-MM') EXPIRY_DATE
,CURRENT_TIMESTAMP LOAD_TS,
f.RECORD_ID,f.DATE_CREATED,
	f.DATE_MODIFIED,

	CONCAT( NVL(f.RECORD_ID,-1), '||',f.LANGUAGE_CODE) INTEGRATION_ID
;

-- truncate table ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.TAB_CMQ_SMQ_W

INSERT INTO ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.TAB_CMQ_SMQ_W(SMQ_CODE, SPR_ID)
SELECT
  DISTINCT 
   COALESCE(SMQ_CODE,-1) SMQ_CODE,
   COALESCE(SPR_ID,'-9999') SPR_ID
 FROM 
 ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_TMP
 WHERE
  BK_CMQ_SMQ_WID=-1;
 
 
UPDATE ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_TMP 
SET BK_CMQ_SMQ_WID= A.BK_CMQ_SMQ_WID
FROM ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.TAB_CMQ_SMQ_W A
WHERE
   COALESCE(LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_TMP.SMQ_CODE,-1)= A.SMQ_CODE 
    AND COALESCE(LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_TMP.SPR_ID,'-9999')= A.SPR_ID 
	AND LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_TMP.BK_CMQ_SMQ_WID=-1;

					




UPDATE ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_DATA_PROCESSING_DTL_TBL
SET REC_READ_CNT = (select count(LOAD_TS) from ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_TMP)
where target_table_name='LS_DB_CMQ_SMQ_HIER_TERM_SCOPE'
and LOAD_STATUS = 'In Progress'
and LOAD_START_TS=(select max(LOAD_START_TS) from ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_DATA_PROCESSING_DTL_TBL where target_table_name='LS_DB_CMQ_SMQ_HIER_TERM_SCOPE'
					and LOAD_STATUS = 'In Progress') 
; 




UPDATE ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_CMQ_SMQ_HIER_TERM_SCOPE   
SET 
 LS_DB_CMQ_SMQ_HIER_TERM_SCOPE.PROCESSING_DT  		=LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_TMP.PROCESSING_DT
,LS_DB_CMQ_SMQ_HIER_TERM_SCOPE.EXPIRY_DATE    		=LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_TMP.EXPIRY_DATE     
,LS_DB_CMQ_SMQ_HIER_TERM_SCOPE.LOAD_TS        		=LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_TMP.LOAD_TS
,LS_DB_CMQ_SMQ_HIER_TERM_SCOPE.INTEGRATION_ID 		=LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_TMP.INTEGRATION_ID
,LS_DB_CMQ_SMQ_HIER_TERM_SCOPE.BK_CMQ_SMQ_WID 		=LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_TMP.BK_CMQ_SMQ_WID 
,LS_DB_CMQ_SMQ_HIER_TERM_SCOPE.SMQ_CODE       		=LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_TMP.SMQ_CODE
,LS_DB_CMQ_SMQ_HIER_TERM_SCOPE.SMQ_NAME       		=LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_TMP.SMQ_NAME
,LS_DB_CMQ_SMQ_HIER_TERM_SCOPE.SMQ_LEVEL      		=LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_TMP.SMQ_LEVEL
,LS_DB_CMQ_SMQ_HIER_TERM_SCOPE.MEDDRA_VERSION 		=LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_TMP.MEDDRA_VERSION
,LS_DB_CMQ_SMQ_HIER_TERM_SCOPE.STATUS         		=LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_TMP.STATUS
,LS_DB_CMQ_SMQ_HIER_TERM_SCOPE.LIST_SOURCE    		=LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_TMP.LIST_SOURCE
,LS_DB_CMQ_SMQ_HIER_TERM_SCOPE.LANGUAGE_CODE  		=LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_TMP.LANGUAGE_CODE
,LS_DB_CMQ_SMQ_HIER_TERM_SCOPE.SMQ_TERM_SCOPE       =LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_TMP.SMQ_TERM_SCOPE  
,LS_DB_CMQ_SMQ_HIER_TERM_SCOPE.SMQ_NAME_TERM_SCOPE  =LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_TMP.SMQ_NAME_TERM_SCOPE
,LS_DB_CMQ_SMQ_HIER_TERM_SCOPE.SMQ_SOURCE           =LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_TMP.SMQ_SOURCE
,LS_DB_CMQ_SMQ_HIER_TERM_SCOPE.TERM_FROM            =LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_TMP.TERM_FROM
,LS_DB_CMQ_SMQ_HIER_TERM_SCOPE.USER_ID              =LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_TMP.USER_ID
,LS_DB_CMQ_SMQ_HIER_TERM_SCOPE.PRIVATE_QUERY_FLAG   =LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_TMP.PRIVATE_QUERY_FLAG
,LS_DB_CMQ_SMQ_HIER_TERM_SCOPE.SMQ_ALGORITHM        =LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_TMP.SMQ_ALGORITHM
,LS_DB_CMQ_SMQ_HIER_TERM_SCOPE.SMQ_NAME_J           =LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_TMP.SMQ_NAME_J
,LS_DB_CMQ_SMQ_HIER_TERM_SCOPE.SMQ_DESCRIPTION      =LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_TMP.SMQ_DESCRIPTION
,LS_DB_CMQ_SMQ_HIER_TERM_SCOPE.SMQ_DESCRIPTION_J    =LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_TMP.SMQ_DESCRIPTION_J
,LS_DB_CMQ_SMQ_HIER_TERM_SCOPE.SMQ_NOTE             =LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_TMP.SMQ_NOTE
,LS_DB_CMQ_SMQ_HIER_TERM_SCOPE.DATE_MODIFIED        =LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_TMP.DATE_MODIFIED
,LS_DB_CMQ_SMQ_HIER_TERM_SCOPE.SPR_ID               =LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_TMP.SPR_ID 
,LS_DB_CMQ_SMQ_HIER_TERM_SCOPE.record_id               =LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_TMP.record_id 
FROM 	${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_TMP 
WHERE 	LS_DB_CMQ_SMQ_HIER_TERM_SCOPE.INTEGRATION_ID = LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_TMP.INTEGRATION_ID
AND DECODE('YES',(SELECT CHAR_PARAM_VALUE FROM ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_ETL_CONFIG WHERE TARGET_TABLE_NAME='HISTORY_CONTROL'),
           LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_TMP.PROCESSING_DT = LS_DB_CMQ_SMQ_HIER_TERM_SCOPE.PROCESSING_DT,1=1);





           
           
UPDATE  ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_CMQ_SMQ_HIER_TERM_SCOPE 
SET EXPIRY_DATE=CURRENT_DATE()
from (
select LS_DB_CMQ_SMQ_HIER_TERM_SCOPE.RECORD_ID ,LS_DB_CMQ_SMQ_HIER_TERM_SCOPE.INTEGRATION_ID
FROM 	${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_CMQ_SMQ_HIER_TERM_SCOPE left join ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_TMP 
ON LS_DB_CMQ_SMQ_HIER_TERM_SCOPE.RECORD_ID=LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_TMP.RECORD_ID
AND LS_DB_CMQ_SMQ_HIER_TERM_SCOPE.INTEGRATION_ID = LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_TMP.INTEGRATION_ID 
where LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_TMP.INTEGRATION_ID  is null AND LS_DB_CMQ_SMQ_HIER_TERM_SCOPE.EXPIRY_DATE = TO_DATE('9999-31-12','YYYY-DD-MM')
and LS_DB_CMQ_SMQ_HIER_TERM_SCOPE.RECORD_ID in (select RECORD_ID from ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_TMP )
) TMP where LS_DB_CMQ_SMQ_HIER_TERM_SCOPE.INTEGRATION_ID=TMP.INTEGRATION_ID
AND LS_DB_CMQ_SMQ_HIER_TERM_SCOPE.EXPIRY_DATE = TO_DATE('9999-31-12','YYYY-DD-MM')
AND 'YES'=(SELECT CHAR_PARAM_VALUE FROM ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_ETL_CONFIG WHERE TARGET_TABLE_NAME ='HISTORY_CONTROL' AND PARAM_NAME='KEEP_HISTORY')	
;



DELETE FROM  ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_CMQ_SMQ_HIER_TERM_SCOPE TGT 
WHERE EXISTS  (SELECT 1 FROM 
  (
    select LS_DB_CMQ_SMQ_HIER_TERM_SCOPE.RECORD_ID ,LS_DB_CMQ_SMQ_HIER_TERM_SCOPE.INTEGRATION_ID
    FROM 	${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_CMQ_SMQ_HIER_TERM_SCOPE left join ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_TMP 
    ON LS_DB_CMQ_SMQ_HIER_TERM_SCOPE.RECORD_ID=LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_TMP.RECORD_ID
    AND LS_DB_CMQ_SMQ_HIER_TERM_SCOPE.INTEGRATION_ID = LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_TMP.INTEGRATION_ID 
    where LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_TMP.INTEGRATION_ID  is null AND LS_DB_CMQ_SMQ_HIER_TERM_SCOPE.EXPIRY_DATE = TO_DATE('9999-31-12','YYYY-DD-MM')
    and  LS_DB_CMQ_SMQ_HIER_TERM_SCOPE.RECORD_ID in (select RECORD_ID from ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_TMP )
) TMP where TGT.INTEGRATION_ID=TMP.INTEGRATION_ID
 )
AND 'NO'=(SELECT CHAR_PARAM_VALUE FROM ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_ETL_CONFIG WHERE TARGET_TABLE_NAME ='HISTORY_CONTROL' AND PARAM_NAME='KEEP_HISTORY')
AND TGT.EXPIRY_DATE = TO_DATE('9999-31-12','YYYY-DD-MM')
;

   
     



INSERT INTO ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_CMQ_SMQ_HIER_TERM_SCOPE
( 
PROCESSING_DT
    ,EXPIRY_DATE
    ,LOAD_TS
    ,INTEGRATION_ID
    ,BK_CMQ_SMQ_WID 
    ,SMQ_CODE
    ,SMQ_NAME
    ,SMQ_LEVEL
    ,MEDDRA_VERSION
    ,STATUS
    ,LIST_SOURCE
    ,LANGUAGE_CODE
    ,SMQ_TERM_SCOPE  
    ,SMQ_NAME_TERM_SCOPE
    ,SMQ_SOURCE
    ,TERM_FROM
    ,USER_ID
    ,PRIVATE_QUERY_FLAG
    ,SMQ_ALGORITHM
    ,SMQ_NAME_J
    ,SMQ_DESCRIPTION
    ,SMQ_DESCRIPTION_J
    ,SMQ_NOTE
    ,DATE_MODIFIED
    ,SPR_ID
    ,record_id    )
SELECT 
 
PROCESSING_DT
    ,EXPIRY_DATE
    ,LOAD_TS
    ,INTEGRATION_ID
    ,BK_CMQ_SMQ_WID 
    ,SMQ_CODE
    ,SMQ_NAME
    ,SMQ_LEVEL
    ,MEDDRA_VERSION
    ,STATUS
    ,LIST_SOURCE
    ,LANGUAGE_CODE
    ,SMQ_TERM_SCOPE  
    ,SMQ_NAME_TERM_SCOPE
    ,SMQ_SOURCE
    ,TERM_FROM
    ,USER_ID
    ,PRIVATE_QUERY_FLAG
    ,SMQ_ALGORITHM
    ,SMQ_NAME_J
    ,SMQ_DESCRIPTION
    ,SMQ_DESCRIPTION_J
    ,SMQ_NOTE
    ,DATE_MODIFIED
    ,SPR_ID,record_id
FROM ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_TMP TMP where not exists (select 1 from ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_CMQ_SMQ_HIER_TERM_SCOPE TGT
where TMP.INTEGRATION_ID||'-'||CASE WHEN 'YES'=(SELECT CHAR_PARAM_VALUE 
														FROM ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_ETL_CONFIG 
														WHERE TARGET_TABLE_NAME ='HISTORY_CONTROL' AND PARAM_NAME='KEEP_HISTORY') 
                                                        THEN TMP.PROCESSING_DT ELSE '9999-12-31' END = TGT.INTEGRATION_ID||'-'||CASE WHEN 'YES'=(SELECT CHAR_PARAM_VALUE 
														FROM ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_ETL_CONFIG 
														WHERE TARGET_TABLE_NAME ='HISTORY_CONTROL' AND PARAM_NAME='KEEP_HISTORY') THEN TGT.PROCESSING_DT ELSE '9999-12-31' END
AND TGT.EXPIRY_DATE = TO_DATE('9999-31-12','YYYY-DD-MM')
);
COMMIT;



UPDATE  ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_CMQ_SMQ_HIER_TERM_SCOPE 
SET EXPIRY_DATE=CURRENT_DATE()-1
FROM 	${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_TMP 
WHERE 	TO_DATE(LS_DB_CMQ_SMQ_HIER_TERM_SCOPE.PROCESSING_DT) < TO_DATE(LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_TMP.PROCESSING_DT)
AND LS_DB_CMQ_SMQ_HIER_TERM_SCOPE.INTEGRATION_ID = LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_TMP.INTEGRATION_ID
AND LS_DB_CMQ_SMQ_HIER_TERM_SCOPE.RECORD_ID = LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_TMP.RECORD_ID
AND LS_DB_CMQ_SMQ_HIER_TERM_SCOPE.EXPIRY_DATE = TO_DATE('9999-31-12','YYYY-DD-MM')
AND MD5(NVL(LS_DB_CMQ_SMQ_HIER_TERM_SCOPE.DATE_MODIFIED ,TO_DATE('1900-01-01','YYYY-DD-MM'))) <> MD5(NVL(LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_TMP.DATE_MODIFIED ,TO_DATE('1900-01-01','YYYY-DD-MM')))
AND 'YES'=(SELECT CHAR_PARAM_VALUE FROM ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_ETL_CONFIG WHERE TARGET_TABLE_NAME ='HISTORY_CONTROL' AND PARAM_NAME='KEEP_HISTORY')	
;

DELETE FROM ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_CMQ_SMQ_HIER_TERM_SCOPE TGT
WHERE  ( record_id  in (SELECT RECORD_ID FROM  ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LSMV_CC_SMQ_CMQ_DELETION_TMP  WHERE TABLE_NAME='LSMV_CC_SMQ_CMQ_LIST') 
OR record_id  in (SELECT RECORD_ID FROM  ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LSMV_CC_SMQ_CMQ_DELETION_TMP  WHERE TABLE_NAME='LSMV_CC_SMQ_CMQ_LIST_C') 
)
AND 'NO'=(SELECT CHAR_PARAM_VALUE FROM ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_ETL_CONFIG WHERE TARGET_TABLE_NAME ='HISTORY_CONTROL' 
AND PARAM_NAME='KEEP_HISTORY');


UPDATE  ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_CMQ_SMQ_HIER_TERM_SCOPE TGT
SET 	TGT.EXPIRY_DATE=CURRENT_DATE()
WHERE 	 ( record_id  in (SELECT RECORD_ID FROM  ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LSMV_CC_SMQ_CMQ_DELETION_TMP  WHERE TABLE_NAME='LSMV_CC_SMQ_CMQ_LIST') 
OR record_id  in (SELECT RECORD_ID FROM  ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LSMV_CC_SMQ_CMQ_DELETION_TMP  WHERE TABLE_NAME='LSMV_CC_SMQ_CMQ_LIST_C') 
)
AND 	TGT.EXPIRY_DATE = TO_DATE('9999-31-12','YYYY-DD-MM')
AND 'YES'=(SELECT CHAR_PARAM_VALUE FROM ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_ETL_CONFIG WHERE TARGET_TABLE_NAME ='HISTORY_CONTROL' 
           AND PARAM_NAME='KEEP_HISTORY');

UPDATE ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_DATA_PROCESSING_DTL_TBL
SET LOAD_END_TS = current_timestamp,
REC_PROCESSED_CNT=(select count(LOAD_TS) from ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_CMQ_SMQ_HIER_TERM_SCOPE where LOAD_TS= (select LOAD_TS from ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_TMP limit 1)),
LOAD_TS=(select LOAD_TS from ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_CMQ_SMQ_HIER_TERM_SCOPE_TMP limit 1),
LOAD_STATUS='Completed'
where target_table_name='LS_DB_CMQ_SMQ_HIER_TERM_SCOPE'
and LOAD_STATUS = 'In Progress'
and LOAD_START_TS=(select max(LOAD_START_TS) from ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_DATA_PROCESSING_DTL_TBL where target_table_name='LS_DB_CMQ_SMQ_HIER_TERM_SCOPE'
and LOAD_STATUS = 'In Progress') ;


*/
           
  RETURN 'LS_DB_CMQ_SMQ_HIER_TERM_SCOPE Load completed';

EXCEPTION
  WHEN OTHER THEN
    LET LINE := SQLCODE || ': ' || SQLERRM;
UPDATE ${tenant_transfm_db_name}.${tenant_transfm_schema_name}.LS_DB_DATA_PROCESSING_DTL_TBL set ERROR_DETAILS=:line, LOAD_STATUS = 'Error' WHERE target_table_name='LS_DB_CMQ_SMQ_HIER_TERM_SCOPE'
and LOAD_STATUS = 'In Progress'
;

  RETURN 'LS_DB_CMQ_SMQ_HIER_TERM_SCOPE not loaded due to etl error. please check LS_DB_DATA_PROCESSING_DTL_TBL for more details';
END;
$$
;

